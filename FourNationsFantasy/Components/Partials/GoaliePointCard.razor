@inject Nhl.Api.INhlApi NhlApi

@if (Player is not null && playerProfile is not null)
{
    <MudPaper Class="pa-4 ma-2" Elevation="0">
        <MudStack>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Color="Color.Surface" Size="Size.Medium" Class="mr-3">
                    <MudImage Src="@playerProfile.Headshot" />
                </MudAvatar>
                <div>
                    <MudText Typo="Typo.h6">@Player.FirstName @Player.LastName</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                        @Player.Position &nbsp;&nbsp;•&nbsp;&nbsp; @Player.Nationality
                        <span>&nbsp;&nbsp;•&nbsp;&nbsp; @playerProfile.SeasonTotals.Last().SavePctg.ToString("N2") SV% &nbsp; @playerProfile.SeasonTotals.Last().GoalsAgainstAvg.ToString("N2") GAA</span>
                    </MudText>
                </div>
            </MudStack>
        </MudStack>
    </MudPaper>
}

@code {
    
    [Parameter]
    public Data.FNFPlayer? Player { get; set; }

    private Nhl.Api.Models.Player.GoalieProfile? playerProfile;

    protected override async Task OnInitializedAsync()
    {
        if (Player is not null)
        {
            playerProfile = await NhlApi.GetGoalieInformationAsync(Player.NhlIdInt);
        }
    }

}