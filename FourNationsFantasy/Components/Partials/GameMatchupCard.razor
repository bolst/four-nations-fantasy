@inject Data.CustomAuthenticationStateProvider CustomAuthenticationStateProvider
@inject Data.IFNFData FNFData
@inject IDialogService DialogService

@if (Game is not null)
{
    <MudPaper Class="pa-4" Style="max-width: 100%;" Elevation="3">
        <MudGrid>
            <MudItem Class="d-flex align-center justify-center" xs="7" @onclick="@OpenGameOverlay">
                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="4">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudAvatar>
                            <MudImage Src=@($"{Game.AwayTeam.Abbrev}-logo.svg")></MudImage>
                        </MudAvatar>
                        <MudText Color="Color.Surface">@Game.AwayTeam.Score</MudText>
                    </MudStack>
                    <MudText Color="Color.Surface" Class="mx-2">vs</MudText>
                    <MudStack AlignItems="AlignItems.Center">
                        <MudAvatar>
                            <MudImage Src=@($"{Game.HomeTeam.Abbrev}-logo.svg")></MudImage>
                        </MudAvatar>
                        <MudText Color="Color.Surface">@Game.HomeTeam.Score</MudText>
                    </MudStack>
                </MudStack>
            </MudItem>
            <MudItem xs="5">
                <MudStack AlignItems="AlignItems.Center" Spacing="2">
                    <MudText Color="Color.Surface">@Game.StartTimeUTC.AddHours(-5).ToString("h:mm tt")</MudText>
                    <MudText Color="Color.Surface">@Game.Venue.Default</MudText>
                    
                    <GuessGameScoreButton Game="Game" />
                    
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>

}

@code{

    [Parameter]
    public Nhl.Api.Models.Schedule.Game Game { get; set; }


    private Task OpenGameOverlay()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, NoHeader = true };

        var parameters = new DialogParameters<GameDialog>
        {
            { x => x.Game, Game }
        };

        return DialogService.ShowAsync<GameDialog>("Game", parameters, options);
    }
}