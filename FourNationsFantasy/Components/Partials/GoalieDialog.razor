@using Nhl.Api.Enumerations.Game
@inject Nhl.Api.INhlApi NhlApi
@inject Data.IFNFData FNFData

@if (PlayerInfo is not null)
{
    <MudDialog TitleClass="pa-0" ContentStyle="min-height: 400px">
        <TitleContent>
            <div style="@backgroundCss(PlayerInfo)">
                <div style="width: 100%" class="d-flex justify-end">
                    <MudIconButton OnClick=@(() => DialogInstance.Close()) Class="ma-1" Icon="@Icons.Material.Filled.Close" Color="Color.Error" Size="Size.Small"/>
                </div>
                <MudStack Class="px-4" Row="true" AlignItems="AlignItems.Center">
                    <MudImage Src="@PlayerInfo.headshot" Width="150"/>
                    <MudStack Style="width: 100%" Spacing="1">
                        <MudText Class="white-text" Typo="Typo.h6">@PlayerInfo.firstname @PlayerInfo.lastname #@PlayerInfo.sweater_number</MudText>
                        @if (loading)
                        {
                            <MudSkeleton SkeletonType="SkeletonType.Text" />
                        }
                        else
                        {
                            <MudText Class="white-text" Typo="Typo.caption">@teamNameStr</MudText>
                        }
                        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceAround">

                            <MudStack AlignItems="AlignItems.Center">
                                <MudText Class="white-text" Typo="Typo.caption">GP</MudText>
                                <MudText Class="white-text" Typo="Typo.h6"><b>@PlayerInfo.games_played</b></MudText>
                            </MudStack>

                            <MudStack AlignItems="AlignItems.Center">
                                <MudText Class="white-text" Typo="Typo.caption">SV%</MudText>
                                <MudText Class="white-text" Typo="Typo.h6"><b>@PlayerInfo.goalie_sv_pctg.ToString("F3")</b></MudText>
                            </MudStack>

                            <MudStack AlignItems="AlignItems.Center">
                                <MudText Class="white-text" Typo="Typo.caption">GAA</MudText>
                                <MudText Class="white-text" Typo="Typo.h6"><b>@PlayerInfo.goalie_gaa.ToString("F2")</b></MudText>
                            </MudStack>

                            <MudStack AlignItems="AlignItems.Center">
                                <MudText Class="white-text" Typo="Typo.caption">SO</MudText>
                                <MudText Class="white-text" Typo="Typo.h6"><b>@PlayerInfo.goalie_shutouts</b></MudText>
                            </MudStack>

                        </MudStack>

                    </MudStack>
                </MudStack>
            </div>
        </TitleContent>
        <DialogContent>
            <MudTabs Centered>
                <MudTabPanel Text="4 Nations">
                    @if (playerGameLog is not null)
                    {
                        @* <PlayerGameLog GameLogs="playerGameLog"/> *@
                    }
                </MudTabPanel>
                <MudTabPanel Text="Reg. Season">
                    @if (playerGameLog is not null)
                    {
                        <GoalieGameLog GameLogs="playerGameLog"/>
                    }
                </MudTabPanel>
            </MudTabs>
        </DialogContent>
    </MudDialog>
}

@code {
    
    [CascadingParameter]
    private MudDialogInstance DialogInstance { get; set; }

    [Parameter]
    public Data.FNFPlayer? PlayerInfo { get; set; }

    private Nhl.Api.Models.Game.GoalieSeasonGameLog? playerGameLog;
    
    private Data.User? playerUser;
    private string teamNameStr => playerUser is null ? "Undrafted" : playerUser.teamname;
    
    private bool loading = false;

    private string backgroundCss(Data.FNFPlayer player) => $"background: linear-gradient( rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) ), url({player.hero_image}); background-size: 100% auto;";

    protected override async Task OnParametersSetAsync()
    {
        if (PlayerInfo is not null)
        {
            loading = true;
            DialogInstance.StateHasChanged();
            
            playerGameLog = await NhlApi.GetGoalieSeasonGameLogsBySeasonAndGameTypeAsync(PlayerInfo.NhlIdInt, "20242025", GameType.RegularSeason);
            
            playerUser = await FNFData.GetUserThatHasPlayerAsync(PlayerInfo);

            loading = false;
            DialogInstance.StateHasChanged();
        }
    }

}