@page "/roster"
@page "/roster/{userId:int}"

@inject Data.IFNFData FNFData
@inject Data.CustomAuthenticationStateProvider CustomAuthenticationStateProvider
@inject NavigationManager Navigation

<PageTitle>Roster</PageTitle>

@if (user is not null)
{
    <div class="pa-2 mb-8">
        <MudText Typo="Typo.h4" HtmlTag="i"><b>@user.TeamName</b></MudText>
    </div>
}

@if (userRoster is not null)
{
    <MudText>Forwards</MudText>
    @foreach (var player in userRoster.Where(p => p.Position == "F"))
    {
        <PlayerPointCard Player="@player" />
    }    
    
    <br />
    
    <MudText>Defensemen</MudText>
    @foreach (var player in userRoster.Where(p => p.Position == "D"))
    {
        <PlayerPointCard Player="@player" />
    }    
    
    <br />

    <MudText>Goalies</MudText>
    @foreach (var player in userRoster.Where(p => p.Position == "G"))
    {
        <GoaliePointCard Player="@player" />
    }
}

@code {
    
    [Parameter]
    public int? userId { get; set; }

    private Data.User? user;
    private IEnumerable<Data.FNFPlayer>? userRoster;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CustomAuthenticationStateProvider.CurrentUser.Email))
        {
            Navigation.NavigateTo("/");
        }

        if (userId is null)
        {
            user = CustomAuthenticationStateProvider.CurrentUser;
        }
        else
        {
            user = await FNFData.GetUserByIdAsync(userId.Value);
        }
        
        
        if (user is not null)
        {
            userRoster = await FNFData.GetRosterAsync(user.Id);
        }
    }
}