@page "/schedule"
@inject NavigationManager Navigation

<style>
    .schedule-item {
        max-width: 100%;
        overflow: hidden;
    }
</style>

<MudContainer MaxWidth="MaxWidth.Medium" Class="py-8">
    <MudText Typo="Typo.h2" Align="Align.Center" Class="mb-8" Color="Color.Surface">
        Schedule
    </MudText>

    <MudStack Spacing="4">
        @foreach (var item in scheduleItems)
        {
            <MudPaper Class="pa-6 schedule-item" Style="background-color: rgba(255,255,255,0.1);">
                <MudGrid>
                    <MudItem xs="6">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="4">
                            <MudStack AlignItems="AlignItems.Center">
                                <span class="flag-emoji" style="font-size: 32px;">@GetFlagEmoji(item.Team1)</span>
                                <MudText Color="Color.Surface" Style="font-size: 18px;">0</MudText>
                            </MudStack>
                            <MudText Color="Color.Surface" Class="mx-2">vs</MudText>
                            <MudStack AlignItems="AlignItems.Center">
                                <span class="flag-emoji" style="font-size: 32px;">@GetFlagEmoji(item.Team2)</span>
                                <MudText Color="Color.Surface" Style="font-size: 18px;">0</MudText>
                            </MudStack>
                        </MudStack>
                    </MudItem>
                    <MudItem xs="6">
                        <MudStack AlignItems="AlignItems.End" Spacing="2">
                            <MudText Color="Color.Surface">@item.Date.ToString("MM/dd/yyyy")</MudText>
                            <MudText Color="Color.Surface">@FormatTime(item.Time)</MudText>
                            <MudText Color="Color.Surface">@item.Location</MudText>
                        </MudStack>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        }
    </MudStack>
</MudContainer>

```

@code {
    private List<ScheduleItem> scheduleItems = new List<ScheduleItem>
    {
        new ScheduleItem 
        { 
            Team1 = "CAN", 
            Team2 = "SWE", 
            Date = new DateTime(2025, 02, 12),
            Time = new TimeSpan(20, 0, 0),
            Location = "Bell Centre" 
        },
        new ScheduleItem 
        { 
            Team1 = "USA", 
            Team2 = "FIN", 
            Date = new DateTime(2025, 02, 13),
            Time = new TimeSpan(20, 0, 0),
            Location = "Bell Centre" 
        },
        new ScheduleItem 
        { 
            Team1 = "FIN", 
            Team2 = "SWE", 
            Date = new DateTime(2025, 02, 15),
            Time = new TimeSpan(13, 0, 0),
            Location = "Bell Centre" 
        },
        new ScheduleItem
        { 
            Team1 = "USA", 
            Team2 = "CAN", 
            Date = new DateTime(2025, 02, 15),
            Time = new TimeSpan(20, 0, 0),
            Location = "Bell Centre" 
        },
        new ScheduleItem
        { 
            Team1 = "CAN", 
            Team2 = "FIN", 
            Date = new DateTime(2025, 02, 17),
            Time = new TimeSpan(13, 0, 0),
            Location = "TD Garden" 
        },
        new ScheduleItem
        { 
            Team1 = "SWE", 
            Team2 = "USA", 
            Date = new DateTime(2025, 02, 17),
            Time = new TimeSpan(20, 0, 0),
            Location = "TD Garden" 
        },
        new ScheduleItem
        { 
            Team1 = "TBD", 
            Team2 = "TBD", 
            Date = new DateTime(2025, 02, 20),
            Time = new TimeSpan(20, 0, 0),
            Location = "TD Garden" 
        },
    };

    private string GetFlagEmoji(string teamCode)
    {
        return teamCode switch
        {
            "CAN" => "üá®üá¶",
            "USA" => "üá∫üá∏",
            "SWE" => "üá∏üá™",
            "FIN" => "üá´üáÆ",
            _ => "üè≥Ô∏è"
        };
    }

    private string FormatTime(TimeSpan time)
    {
        int hour = time.Hours % 12;
        if (hour == 0) hour = 12;
        string amPm = time.Hours < 12 ? "am" : "pm";
        return $"{hour}:{time.Minutes:D2} {amPm}";
    }

    public class ScheduleItem
    {
        public string Team1 { get; set; }
        public string Team2 { get; set; }
        public DateTime Date { get; set; }
        public TimeSpan Time { get; set; }
        public string Location { get; set; }
    }
}

