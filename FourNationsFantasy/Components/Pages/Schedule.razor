@page "/schedule"

@inject NavigationManager Navigation
@inject Data.CustomAuthenticationStateProvider CustomAuthenticationStateProvider
@inject Data.IFNFData FNFData

<PageTitle>Schedule</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="py-8">
    @if (fnSchedule is not null)
    {
        <MudStack Spacing="4">
            @foreach (var day in fnSchedule.GameWeek)
            {
                if (day.Games.Count() > 0)
                {
                    <MudText><b>@(DateTime.Parse(day.Date).ToString("dddd, MMMM dd"))</b></MudText>
                }
                
                foreach (var game in day.Games)
                {
                    <GameMatchupCard Game="@game" />
                }
            }
        </MudStack>
    }

</MudContainer>

@code {
    private Nhl.Api.Models.Schedule.LeagueSchedule? fnSchedule;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CustomAuthenticationStateProvider.CurrentUser.email))
        {
            Navigation.NavigateTo("/");
        }


        fnSchedule = await FNFData.GetTournamentScheduleAsync();
    }

    private string GetFlagEmoji(string teamCode)
    {
        return teamCode.ToUpper() switch
        {
            "CAN" => "üá®üá¶",
            "USA" => "üá∫üá∏",
            "SWE" => "üá∏üá™",
            "FIN" => "üá´üáÆ",
            _ => "üè≥Ô∏è"
        };
    }

    private string FormatTime(TimeSpan time)
    {
        int hour = time.Hours % 12;
        if (hour == 0) hour = 12;
        string amPm = time.Hours < 12 ? "am" : "pm";
        return $"{hour}:{time.Minutes:D2} {amPm}";
    }

    public class ScheduleItem
    {
        public string Team1 { get; set; }
        public string Team2 { get; set; }
        public DateTime Date { get; set; }
        public TimeSpan Time { get; set; }
        public string Location { get; set; }
    }
}

